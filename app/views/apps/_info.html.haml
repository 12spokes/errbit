- content_for :meta do
  %strong Errs Caught:
  = @app.errs.count
  %strong Deploy Count:
  = @app.deploys.count
  %strong API Key:
  = @app.api_key

%h3{:id => 'watchers_toggle'}
  Watchers
  %span{:class => 'click_span'} (show/hide)
#watchers_div
  - if @app.notify_all_users
    %table.watchers
      %thead
        %tr
          %th All users will be notified when something happens.
  - else
    %table.watchers
      %thead
        %tr
          %th User or Email
      %tbody
        - @app.watchers.each do |watcher|
          %tr
            %td= watcher.label
        - if @app.watchers.none?
          %tr
            %td
              %em Sadly, no one is watching this app

- if @app.github_url?
  %h3{:id => 'repository_toggle'}
    Repository
    %span{:class => 'click_span'} (show/hide)
  #repository_div
    %table.repository
      %thead
        %tr
          %th GitHub
      %tbody
        %tr
          %td= link_to(@app.github_url, @app.github_url, :target => '_blank')

%h3{:id => 'deploys_toggle'}
  Latest Deploys
  %span{:class => 'click_span'} (show/hide)
#deploys_div
  - if @app.recent_deploys.any?
    %table.deploys
      %thead
        %tr
          %th When
          %th Who
          %th Message
          %th Repository
          %th Revision

      %tbody
        - @deploys.each do |deploy|
          %tr
            %td.when #{deploy.created_at.to_s(:micro)}
            %td.who #{deploy.username}
            %td.message #{deploy.message}
            %td.repository #{deploy.repository}
            %td.revision #{deploy.revision}
    = link_to "All Deploys (#{@app.deploys.count})", app_deploys_path(@app), :class => 'button'
  - else
    %h3 No deploys


